<?php
/*
Task 1. global создает ссылку на глобальную переменную. Ее целесообразно применять когда нужно получить доступ из
локальной области видимости к переменной из глобальной области видимости. По возможности лучше избегать global, и
применять ее только в случае крайней необходимости.

Task 2. $_SESSION, $_REQUEST, $_GET, $_POST, $_SERVER, $_FILES, $_COOKIE, $_ENV, $GLOBALS

Task 3. Закрывающий дескриптор “?>“ используется когда заканчивается php-скрипт и начинается вывод HTML
*/

// Task 4.
function changeX($x){
    $x += 5;
    echo $x;
}
$x = 1;
echo $x; // выведет 1, которая присвоилась выше.
changeX($x); // выведет 6, т.к. в функции к 1 прибавилась 5.
echo $x; // выведет 1, т.к. глобальная переменная не изменилась.

// Task 5.
function test()
{
    static $a = 0;
    echo $a;
    $a++;
}
test(); // выведет 0, т.к. переменной присвоили 0.
test(); // выведет 1, т.к. статическая переменная сохраняет значение.
test(); // выведет 2, т.к. к статической переменной опять прибавилась 1.

// Task 6. Как перевернуть массив? Есть массив array(‘h’, ‘e’, ‘l’, ‘l’, ‘o’),
// как из него получить array(‘o’, ‘l’, ‘l’, ‘e’, ‘h’)?
$helloArr = ['h', 'e', 'l', 'l', 'o'];
function reverseArr($arr) {
    $ollehArr = [];
    foreach ($arr as $item) {
        array_unshift($ollehArr, $item);
    }
    return $ollehArr;
}
print_r(reverseArr($helloArr));
print_r(array_reverse($helloArr)); // второй вариант.

// Task 7. Как перевернуть строку задом наперед?
$string = 'hello';
$stringToArray = str_split($string);
$reverseArray = reverseArr($stringToArray);
$reverseString = implode('', $reverseArray);
echo $reverseString;
echo strrev($string); // второй вариант.

// Task 8. Что будет результатом работы данного кода?

$a=0;
if($b=$a)
    echo "One";
else
    echo "Two";
// Выведет Two. В условии переменной $b присваевается 0, что равносильно false, и т.к. условие не выполняется
// выводится else

// Task 9. Сгенерировать три случайных числа в диапазоне от 0 до 10. Если сумма этих чисел меньше 15, сгенерировать
// новую тройку.
do {
    $a = rand(0, 10);
    $b = rand(0, 10);
    $c = rand(0, 10);
} while ($a + $b + $c < 15);
echo $a + $b + $c;

// Task 10. Какое число выведет данный код?
//$i = 10;
//$i += ++i + $i + $i++;
//echo $i;
// данный код выведет ошибку, вероятно должно быть вот так:
$i = 10;
$i += ++$i + $i + $i++;
echo $i; // выведет 45. Первым срабатывает преинкремент, получается 11. Прибавляем 11 и еще 11, получается 33. Эту сумму
//прибавляем и присваиваем нашей переменной в которой 11 и получаем 44. Затем выполняется постинкремент и получается 45.

// Task 11. Что выведет приведенный ниже код?
$a = "1";
$a[$a] = "2";
echo $a; // выведет 12. К строке 1 на несуществующую позицию 1 добавится символ 2, и получится строка 12.